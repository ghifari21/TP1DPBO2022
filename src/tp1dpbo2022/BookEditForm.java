/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tp1dpbo2022;

import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class BookEditForm extends javax.swing.JFrame {
    dbConnection db = new dbConnection();
    private String id;
    /**
     * Creates new form BookAuthor
     */
    public BookEditForm() {
        initComponents();
    }
    
    public void editBook(String id, String urlImg, String penerbit, String author, String desc) {
        this.id = id;
        inputPenerbit.setText(penerbit);
        inputAuthor.setText(author);
        inputDesc.setText(desc);
        inputImg.setText(urlImg);
    }
    
    private void clearForm() {
        inputPenerbit.setText("");
        inputAuthor.setText("");
        inputDesc.setText("");
        inputImg.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BookTitle = new javax.swing.JLabel();
        penerbitLabel = new javax.swing.JLabel();
        inputPenerbit = new javax.swing.JTextField();
        authorLabel = new javax.swing.JLabel();
        inputAuthor = new javax.swing.JTextField();
        inputImg = new javax.swing.JTextField();
        imgLabel = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        descLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputDesc = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BookTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        BookTitle.setText("Edit Buku");

        penerbitLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        penerbitLabel.setText("Penerbit");

        inputPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPenerbitActionPerformed(evt);
            }
        });

        authorLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authorLabel.setText("Author");

        inputAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAuthorActionPerformed(evt);
            }
        });

        inputImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputImgActionPerformed(evt);
            }
        });

        imgLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        imgLabel.setText("URL Gambar");

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        descLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        descLabel.setText("Deskripsi");

        inputDesc.setColumns(20);
        inputDesc.setRows(5);
        jScrollPane1.setViewportView(inputDesc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 166, Short.MAX_VALUE)
                        .addComponent(submitBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(imgLabel)
                                .addGap(18, 18, 18)
                                .addComponent(inputImg))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(authorLabel)
                                    .addComponent(penerbitLabel)
                                    .addComponent(descLabel))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(inputAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                        .addComponent(inputPenerbit))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(BookTitle))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BookTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(penerbitLabel)
                    .addComponent(inputPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel)
                    .addComponent(inputAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgLabel)
                    .addComponent(inputImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBtn)
                    .addComponent(clearBtn)
                    .addComponent(submitBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPenerbitActionPerformed

    private void inputAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAuthorActionPerformed

    private void inputImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputImgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputImgActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        String penerbit = inputPenerbit.getText();
        String author = inputAuthor.getText();
        String deskripsi = inputDesc.getText();
        String urlImg = inputImg.getText();
        
        if (penerbit.length() == 0 || author.length() == 0 || deskripsi.length() == 0 || urlImg.length() == 0) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
        }else {
            Book dataBuku = new Book();
            int id = Integer.parseInt(this.id);
            dataBuku.setId(id);
            dataBuku.setPenerbit(penerbit);
            dataBuku.setImg(urlImg);
            dataBuku.setAuthor(author);
            dataBuku.setDeskripsi(deskripsi);
         
            try {
                String sql = "UPDATE tbooks SET img='"+dataBuku.getImg()+"', penerbit='"+dataBuku.getPenerbit()+"', author='"+dataBuku.getAuthor()+"', deskripsi='"+dataBuku.getDeskripsi()+"' WHERE id="+dataBuku.getId()+";";
                db.Query(sql);
            }catch(Exception e) {
                System.err.println("Update gagal " +e.getMessage());
            }
            clearForm();
            this.setVisible(false);
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_closeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BookTitle;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel descLabel;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JTextField inputAuthor;
    private javax.swing.JTextArea inputDesc;
    private javax.swing.JTextField inputImg;
    private javax.swing.JTextField inputPenerbit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel penerbitLabel;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
